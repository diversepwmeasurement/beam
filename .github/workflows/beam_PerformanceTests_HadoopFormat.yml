concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }} @ ${{ github.event.issue.number || github.sha || github.head_ref
    || github.ref }}-${{ github.event.schedule || github.event.comment.id || github.event.sender.login
    }}
env:
  DEVELOCITY_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
  GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GE_CACHE_PASSWORD }}
  GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GE_CACHE_USERNAME }}
  INFLUXDB_USER: ${{ secrets.INFLUXDB_USER }}
  INFLUXDB_USER_PASSWORD: ${{ secrets.INFLUXDB_USER_PASSWORD }}
jobs:
  beam_PerformanceTests_HadoopFormat:
    if: 'github.event_name == ''workflow_dispatch'' ||

      (github.event_name == ''schedule'' && github.repository == ''apache/beam'')
      ||

      github.event.comment.body == ''Run Java HadoopFormatIO Performance Test''

      '
    name: ${{ matrix.job_name }} (${{ matrix.job_phrase }})
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Setup repository
      uses: ./.github/actions/setup-action
      with:
        comment_phrase: ${{ matrix.job_phrase }}
        github_job: ${{ matrix.job_name }} (${{ matrix.job_phrase }})
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - continue-on-error: true
      name: Setup environment
      uses: ./.github/actions/setup-environment-action
    - continue-on-error: true
      id: auth
      name: Authenticate on GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    - continue-on-error: true
      name: Set k8s access
      uses: ./.github/actions/setup-k8s-access
      with:
        cluster_name: io-datastores
        k8s_namespace: ${{ matrix.job_name }}-${{ github.run_id }}
    - continue-on-error: true
      id: install_postgres
      name: Install postgres
      run: 'kubectl apply -f ${{ github.workspace }}/.test-infra/kubernetes/postgres/postgres-service-for-local-dev.yml

        kubectl wait svc/postgres-for-dev --for=jsonpath=''{.status.loadBalancer.ingress[0].ip}''
        --timeout=60s

        loadbalancer_IP=$(kubectl get svc postgres-for-dev -o jsonpath=''{.status.loadBalancer.ingress[0].ip}'')

        echo postgres_IP=$loadbalancer_IP >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      name: Prepare test arguments
      uses: ./.github/actions/test-arguments-action
      with:
        argument-file-paths: '${{ github.workspace }}/.github/workflows/performance-tests-pipeline-options/hadoopFormat.txt

          '
        arguments: '--postgresServerName=${{ steps.install_postgres.outputs.postgres_IP
          }}

          '
        test-language: java
        test-type: performance
    - continue-on-error: true
      name: run integrationTest
      uses: ./.github/actions/gradle-command-self-hosted-action
      with:
        arguments: '--info \

          --tests org.apache.beam.sdk.io.hadoop.format.HadoopFormatIOIT \

          -DintegrationTestRunner=dataflow \

          -DintegrationTestPipelineOptions=''[${{ env.beam_PerformanceTests_HadoopFormat_test_arguments_1
          }}]'' \

          '
        gradle-command: :sdks:java:io:hadoop-format:integrationTest
    strategy:
      matrix:
        job_name:
        - beam_PerformanceTests_HadoopFormat
        job_phrase:
        - Run Java HadoopFormatIO Performance Test
    timeout-minutes: 100
name: PerformanceTests HadoopFormat
on:
  repository_dispatch:
    types: trigger-ga___beam_PerformanceTests_HadoopFormat.yml
permissions:
  actions: write
  checks: write
  contents: read
  deployments: read
  discussions: read
  id-token: none
  issues: write
  packages: read
  pages: read
  pull-requests: write
  repository-projects: read
  security-events: read
  statuses: read
