concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }} @ ${{ github.event.issue.number || github.sha || github.head_ref
    || github.ref }}-${{ github.event.schedule || github.event.comment.id || github.event.sender.login
    }}
env:
  DEVELOCITY_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
  GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GE_CACHE_PASSWORD }}
  GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GE_CACHE_USERNAME }}
  INFLUXDB_USER: ${{ secrets.INFLUXDB_USER }}
  INFLUXDB_USER_PASSWORD: ${{ secrets.INFLUXDB_USER_PASSWORD }}
jobs:
  beam_StressTests_Java_KafkaIO:
    if: 'github.event_name == ''workflow_dispatch'' ||

      (github.event_name == ''schedule'' && github.repository == ''apache/beam'')
      ||

      github.event.comment.body == ''Run Stress Tests Java KafkaIO''

      '
    name: ${{ matrix.job_name }} (${{ matrix.job_phrase }})
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Setup repository
      uses: ./.github/actions/setup-action
      with:
        comment_phrase: ${{ matrix.job_phrase }}
        github_job: ${{ matrix.job_name }} (${{ matrix.job_phrase }})
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - continue-on-error: true
      name: Setup environment
      uses: ./.github/actions/setup-environment-action
    - continue-on-error: true
      id: auth
      name: Authenticate on GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    - continue-on-error: true
      name: Set k8s access
      uses: ./.github/actions/setup-k8s-access
      with:
        cluster_name: kafka-workflows
        cluster_zone: us-central1
        k8s_namespace: ${{ matrix.job_name }}-${{ github.run_id }}
    - continue-on-error: true
      id: install_kafka
      name: Install Kafka
      run: 'kubectl apply -k ${{ github.workspace }}/.test-infra/kafka/strimzi/02-kafka-persistent/overlays/gke-internal-load-balanced

        kubectl wait kafka beam-testing-cluster --for=condition=Ready --timeout=1800s

        '
    - continue-on-error: true
      id: set_brokers
      name: Set up Kafka brokers
      run: "declare -a kafka_service_brokers\ndeclare -a kafka_service_brokers_ports\n\
        for INDEX in {0..2}; do\n  kubectl wait svc/beam-testing-cluster-kafka-${INDEX}\
        \ --for=jsonpath='{.status.loadBalancer.ingress[0].ip}' --timeout=1200s\n\
        \  kafka_service_brokers[$INDEX]=$(kubectl get svc beam-testing-cluster-kafka-${INDEX}\
        \ -o jsonpath='{.status.loadBalancer.ingress[0].ip}')\n  kafka_service_brokers_ports[$INDEX]=$(kubectl\
        \ get svc beam-testing-cluster-kafka-${INDEX} -o jsonpath='{.spec.ports[0].port}')\n\
        \  echo \"KAFKA_SERVICE_BROKER_${INDEX}=${kafka_service_brokers[$INDEX]}\"\
        \ >> $GITHUB_OUTPUT\n  echo \"KAFKA_SERVICE_BROKER_PORTS_${INDEX}=${kafka_service_brokers_ports[$INDEX]}\"\
        \ >> $GITHUB_OUTPUT\ndone\n"
    - continue-on-error: true
      name: run Kafka StressTest Large
      uses: ./.github/actions/gradle-command-self-hosted-action
      with:
        gradle-command: :it:kafka:KafkaStressTestLarge --info -DbootstrapServers="${{
          steps.set_brokers.outputs.KAFKA_SERVICE_BROKER_0 }}:${{ steps.set_brokers.outputs.KAFKA_SERVICE_BROKER_PORTS_0
          }},${{ steps.set_brokers.outputs.KAFKA_SERVICE_BROKER_1 }}:${{ steps.set_brokers.outputs.KAFKA_SERVICE_BROKER_PORTS_1
          }},${{ steps.set_brokers.outputs.KAFKA_SERVICE_BROKER_2 }}:${{ steps.set_brokers.outputs.KAFKA_SERVICE_BROKER_PORTS_2
          }}" -DinfluxHost="http://10.128.0.96:8086" -DinfluxDatabase="beam_test_metrics"
          -DinfluxMeasurement="java_stress_test_kafka"
    strategy:
      matrix:
        job_name:
        - beam_StressTests_Java_KafkaIO
        job_phrase:
        - Run Stress Tests Java KafkaIO
    timeout-minutes: 720
name: StressTests Java KafkaIO
on:
  repository_dispatch:
    types: trigger-ga___beam_StressTests_Java_KafkaIO.yml
permissions:
  actions: write
  checks: read
  contents: read
  deployments: read
  discussions: read
  id-token: none
  issues: read
  packages: read
  pages: read
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: read
