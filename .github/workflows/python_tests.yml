concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }} @ ${{ github.event.issue.number || github.event.pull_request.head.label
    || github.sha || github.head_ref || github.ref }}-${{ github.event.schedule ||
    github.event.comment.id || github.event.sender.login}}
jobs:
  build_python_sdk_source:
    if: "needs.check_gcp_variables.outputs.gcp-variables-set == 'true' && (\n  (github.event_name\
      \ == 'push' || github.event_name == 'schedule') ||\n  (github.event_name ==\
      \ 'workflow_dispatch' && github.event.inputs.runDataflow == 'true')\n)\n"
    name: Build python source distribution
    needs:
    - check_gcp_variables
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Setup environment
      uses: ./.github/actions/setup-environment-action
      with:
        python-version: default
    - continue-on-error: true
      name: Build source
      run: pip install -U build && python -m build --sdist
      working-directory: ./sdks/python
    - continue-on-error: true
      name: Rename source file
      run: mv $(ls | grep "apache-beam.*tar\.gz\|apache_beam.*tar\.gz") apache-beam-source.tar.gz
      working-directory: ./sdks/python/dist
    - continue-on-error: true
      name: Upload compressed sources as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python_sdk_source
        path: sdks/python/dist/apache-beam-source.tar.gz
  check_gcp_variables:
    name: Check GCP variables
    outputs:
      gcp-variables-set: ${{ steps.check_gcp_variables.outputs.gcp-variables-set }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_PYTHON_WHEELS_BUCKET: not-needed-here
        GCP_REGION: ${{ secrets.GCP_REGION }}
        GCP_SA_EMAIL: ${{ secrets.GCP_SA_EMAIL }}
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        GCP_TESTING_BUCKET: ${{ secrets.GCP_TESTING_BUCKET }}
      id: check_gcp_variables
      name: Check are GCP variables set
      run: ./scripts/ci/ci_check_are_gcp_variables_set.sh
    timeout-minutes: 5
  python_unit_tests:
    name: Python Unit Tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Setup environment
      uses: ./.github/actions/setup-environment-action
      with:
        python-version: ${{ matrix.params.py_ver }}
    - continue-on-error: true
      name: Install tox
      run: pip install tox
    - continue-on-error: true
      if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
      name: Run tests basic unix
      run: tox -c tox.ini run -e ${{ matrix.params.tox_env }}
      working-directory: ./sdks/python
    - continue-on-error: true
      if: startsWith(matrix.os, 'windows')
      name: Run tests basic windows
      run: tox -c tox.ini run -e ${{ matrix.params.tox_env }}-win
      working-directory: ./sdks/python
    - continue-on-error: true
      if: always()
      name: Upload test logs
      uses: actions/upload-artifact@v4
      with:
        name: pytest-${{matrix.os}}-${{matrix.params.py_ver}}
        path: sdks/python/pytest**.xml
    strategy:
      fail-fast: false
      matrix:
        os:
        - macos-latest
        - windows-latest
        params:
        - py_ver: '3.8'
          tox_env: py38
        - py_ver: '3.9'
          tox_env: py39
        - py_ver: '3.10'
          tox_env: py310
        - py_ver: '3.11'
          tox_env: py311
        - py_ver: '3.12'
          tox_env: py312
  python_wordcount_dataflow:
    name: Python Wordcount Dataflow
    needs:
    - build_python_sdk_source
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Setup environment
      uses: ./.github/actions/setup-environment-action
      with:
        go-version: default
        python-version: ${{ matrix.python }}
    - continue-on-error: true
      name: Download source from artifacts
      uses: actions/download-artifact@v4
      with:
        name: python_sdk_source
        path: apache-beam-source
    - continue-on-error: true
      name: Authenticate on GCP
      uses: google-github-actions/setup-gcloud@v0
      with:
        export_default_credentials: true
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_email: ${{ secrets.GCP_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
    - continue-on-error: true
      name: Install requirements
      run: pip install setuptools --upgrade && pip install -e ".[gcp]"
      working-directory: ./sdks/python
    - continue-on-error: true
      name: Run WordCount
      run: "python -m apache_beam.examples.wordcount \\\n  --input gs://dataflow-samples/shakespeare/kinglear.txt\
        \ \\\n  --output gs://${{ secrets.GCP_TESTING_BUCKET }}/python_wordcount_dataflow/counts\
        \ \\\n  --runner DataflowRunner \\\n  --project ${{ secrets.GCP_PROJECT_ID\
        \ }} \\\n  --region ${{ secrets.GCP_REGION }} \\\n  --temp_location gs://${{\
        \ secrets.GCP_TESTING_BUCKET }}/tmp/python_wordcount_dataflow/ \\\n  --sdk_location\
        \ ../../apache-beam-source/apache-beam-source.tar.gz\n"
      shell: bash
      working-directory: ./sdks/python
    strategy:
      fail-fast: false
      matrix:
        os:
        - - self-hosted
          - ubuntu-20.04
          - main
        - macos-latest
        - windows-latest
        python:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
  python_wordcount_direct_runner:
    name: Python Wordcount Direct Runner
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Install python
      uses: ./.github/actions/setup-environment-action
      with:
        python-version: ${{ matrix.python }}
    - continue-on-error: true
      name: Install requirements
      run: pip install setuptools --upgrade && pip install -e .
      working-directory: ./sdks/python
    - continue-on-error: true
      name: Run WordCount
      run: python -m apache_beam.examples.wordcount --input MANIFEST.in --output counts
      shell: bash
      working-directory: ./sdks/python
    strategy:
      fail-fast: false
      matrix:
        os:
        - - self-hosted
          - ubuntu-20.04
          - main
        - macos-latest
        - windows-latest
        python:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
name: Python tests
on:
  repository_dispatch:
    types: trigger-ga___python_tests.yml
