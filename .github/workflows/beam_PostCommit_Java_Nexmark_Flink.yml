concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }} @ ${{ github.event.issue.number || github.sha || github.head_ref
    || github.ref }}-${{ github.event.schedule || github.event.comment.id || github.event.sender.login
    }}
env:
  DEVELOCITY_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
  GRADLE_COMMAND_ARGUMENTS: "-Pnexmark.args=--manageResources=false \n--monitorJobs=true\
    \ \n--bigQueryTable=nexmark \n--bigQueryDataset=nexmark \n--project=apache-beam-testing\
    \ \n--resourceNameMode=QUERY_RUNNER_AND_MODE \n--exportSummaryToBigQuery=true\
    \ \n--tempLocation=gs://temp-storage-for-perf-tests/nexmark \n--influxDatabase=beam_test_metrics\
    \ \n--influxHost=http://10.128.0.96:8086 \n--baseInfluxMeasurement=nexmark \n\
    --exportSummaryToInfluxDB=true \n--influxRetentionPolicy=forever \n--suite=SMOKE\
    \ \n--streamTimeout=60 \n--runner=FlinkRunner\n"
  GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GE_CACHE_PASSWORD }}
  GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GE_CACHE_USERNAME }}
  INFLUXDB_USER: ${{ secrets.INFLUXDB_USER }}
  INFLUXDB_USER_PASSWORD: ${{ secrets.INFLUXDB_USER_PASSWORD }}
jobs:
  beam_PostCommit_Java_Nexmark_Flink:
    if: 'github.event_name == ''workflow_dispatch'' ||

      github.event_name == ''pull_request_target'' ||

      (github.event_name == ''schedule'' && github.repository == ''apache/beam'')
      ||

      github.event.comment.body == ''Run Flink Runner Nexmark Tests''

      '
    name: ${{ matrix.job_name }} (${{ matrix.job_phrase }})
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Setup repository
      uses: ./.github/actions/setup-action
      with:
        comment_phrase: ${{ matrix.job_phrase }}
        github_job: ${{ matrix.job_name }} (${{ matrix.job_phrase }})
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - continue-on-error: true
      name: Setup environment
      uses: ./.github/actions/setup-environment-action
    - continue-on-error: true
      if: matrix.queryLanguage != 'none'
      name: run PostCommit Java Nexmark Flink (${{ matrix.streaming }} ${{ matrix.queryLanguage
        }}) script
      uses: ./.github/actions/gradle-command-self-hosted-action
      with:
        arguments: "-Pnexmark.runner=:runners:flink:1.15 \\\n \"${{ env.GRADLE_COMMAND_ARGUMENTS\
          \ }} --streaming=${{ matrix.streaming }} --queryLanguage=${{ matrix.queryLanguage\
          \ }}\" \\\n"
        gradle-command: :sdks:java:testing:nexmark:run
    - continue-on-error: true
      if: matrix.queryLanguage == 'none'
      name: run PostCommit Java Nexmark Flink (${{ matrix.streaming }}) script
      uses: ./.github/actions/gradle-command-self-hosted-action
      with:
        arguments: '-Pnexmark.runner=:runners:flink:1.15 \

          "${{ env.GRADLE_COMMAND_ARGUMENTS }}--streaming=${{ matrix.streaming }}"'
        gradle-command: :sdks:java:testing:nexmark:run
    strategy:
      fail-fast: false
      matrix:
        job_name:
        - beam_PostCommit_Java_Nexmark_Flink
        job_phrase:
        - Run Flink Runner Nexmark Tests
        queryLanguage:
        - sql
        - zetasql
        - none
        streaming:
        - false
        - true
    timeout-minutes: 240
name: PostCommit Java Nexmark Flink
on:
  repository_dispatch:
    types: trigger-ga___beam_PostCommit_Java_Nexmark_Flink.yml
permissions:
  actions: write
  checks: write
  contents: read
  deployments: read
  discussions: read
  id-token: none
  issues: write
  packages: read
  pages: read
  pull-requests: write
  repository-projects: read
  security-events: read
  statuses: read
