jobs:
  start_snapshot_build:
    env:
      BRANCH_NAME: snapshot_build-${{ github.event.inputs.RELEASE_VERSION }}
      RELEASE_BRANCH: release-${{ github.event.inputs.RELEASE_VERSION }}
      REMOTE_NAME: remote_repo
      REMOTE_URL: ${{ github.server_url }}/${{ github.repository }}
    needs: update_master
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Trigger snapshot build
      run: 'echo "Working in progress. Please trigger ''Release Nightly Snapshot''
        GHA workflow manually."

        '
  update_master:
    env:
      MASTER_BRANCH: master
      NEXT_RELEASE: ${{ github.event.inputs.NEXT_VERSION }}
      RELEASE: ${{ github.event.inputs.RELEASE_VERSION }}
      SCRIPT_DIR: ./release/src/main/scripts
    needs: update_release_branch
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Validate Next Version
      run: "if [[ $NEXT_RELEASE =~ ([0-9]+\\.[0-9]+\\.[0-9]+) ]]; then\n  echo \"\
        NEXT_VERSION_IN_BASE_BRANCH=${BASH_REMATCH[1]}\" >> $GITHUB_ENV\nelse\n  echo\
        \ \"The input for NEXT_RELEASE does not match a valid format [0-9]+\\.[0-9]+\\\
        .[0-9]+\"\n  exit 1\nfi\n"
    - continue-on-error: true
      name: Check out code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set git config
      run: 'git config user.name $GITHUB_ACTOR

        git config user.email actions@"$RUNNER_NAME".local

        '
    - continue-on-error: true
      name: Install xmllint
      run: sudo apt-get install -y libxml2-utils
    - continue-on-error: true
      name: Update .asf.yaml to protect new release branch from force push
      run: 'sed -i -e "s/master: {}/master: {}\n    release-${RELEASE}: {}/g" .asf.yaml

        '
    - continue-on-error: true
      name: Update master branch
      run: 'bash "${SCRIPT_DIR}/set_version.sh" "${NEXT_VERSION_IN_BASE_BRANCH}"

        echo "==============Update master branch as following================"

        git diff

        echo "==============================================================="

        '
    - continue-on-error: true
      name: Commit and Push to master branch files with Next Version
      run: 'git add *

        git add .asf.yaml

        git commit -m "Moving to ${NEXT_VERSION_IN_BASE_BRANCH}-SNAPSHOT on master
        branch."

        git push origin ${MASTER_BRANCH}

        '
  update_release_branch:
    env:
      RELEASE: ${{ github.event.inputs.RELEASE_VERSION }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Validate Release Version
      run: "if [[ ${RELEASE} =~ ([0-9]+\\.[0-9]+\\.[0-9]+) ]]; then\n  echo \"RELEASE_VERSION=${BASH_REMATCH[1]}\"\
        \ >> $GITHUB_ENV\n  echo \"RELEASE_BRANCH=release-${RELEASE}\" >> $GITHUB_ENV\n\
        else\n  echo \"The input for RELEASE does not match a valid format [0-9]+\\\
        .[0-9]+\\.[0-9]+\"\n  exit 1\nfi\n"
    - continue-on-error: true
      name: Check out code
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set git config
      run: 'git config user.name $GITHUB_ACTOR

        git config user.email actions@"$RUNNER_NAME".local

        '
    - continue-on-error: true
      name: Checkout to release branch
      run: 'git checkout -b ${RELEASE_BRANCH}

        echo "==================Current working branch======================="

        echo ${RELEASE_BRANCH}

        echo "==============================================================="

        '
    - continue-on-error: true
      name: Update release version for dataflow runner
      run: 'sed -i -e "s/''beam-master-.*''/''${RELEASE}''/g" \

        runners/google-cloud-dataflow-java/build.gradle

        echo "===============Update release branch as following=============="

        git diff

        echo "==============================================================="

        '
    - continue-on-error: true
      if: ${{github.event.inputs.CREATE_RELEASE_BRANCH == 'yes'}}
      name: Commit and Push to release branch
      run: 'git add runners/google-cloud-dataflow-java/build.gradle

        git commit -m "Set Dataflow container to release version."

        git push --set-upstream origin ${RELEASE_BRANCH}

        '
name: Cut Release Branch
on:
  repository_dispatch:
    types: trigger-ga___cut_release_branch.yml
permissions:
  contents: write
  pull-requests: write
